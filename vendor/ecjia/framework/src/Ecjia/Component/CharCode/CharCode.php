<?php
//
//    ______         ______           __         __         ______
//   /\  ___\       /\  ___\         /\_\       /\_\       /\  __ \
//   \/\  __\       \/\ \____        \/\_\      \/\_\      \/\ \_\ \
//    \/\_____\      \/\_____\     /\_\/\_\      \/\_\      \/\_\ \_\
//     \/_____/       \/_____/     \/__\/_/       \/_/       \/_/ /_/
//
//   上海商创网络科技有限公司
//
//  ---------------------------------------------------------------------------------
//
//   一、协议的许可和权利
//
//    1. 您可以在完全遵守本协议的基础上，将本软件应用于商业用途；
//    2. 您可以在协议规定的约束和限制范围内修改本产品源代码或界面风格以适应您的要求；
//    3. 您拥有使用本产品中的全部内容资料、商品信息及其他信息的所有权，并独立承担与其内容相关的
//       法律义务；
//    4. 获得商业授权之后，您可以将本软件应用于商业用途，自授权时刻起，在技术支持期限内拥有通过
//       指定的方式获得指定范围内的技术支持服务；
//
//   二、协议的约束和限制
//
//    1. 未获商业授权之前，禁止将本软件用于商业用途（包括但不限于企业法人经营的产品、经营性产品
//       以及以盈利为目的或实现盈利产品）；
//    2. 未获商业授权之前，禁止在本产品的整体或在任何部分基础上发展任何派生版本、修改版本或第三
//       方版本用于重新开发；
//    3. 如果您未能遵守本协议的条款，您的授权将被终止，所被许可的权利将被收回并承担相应法律责任；
//
//   三、有限担保和免责声明
//
//    1. 本软件及所附带的文件是作为不提供任何明确的或隐含的赔偿或担保的形式提供的；
//    2. 用户出于自愿而使用本软件，您必须了解使用本软件的风险，在尚未获得商业授权之前，我们不承
//       诺提供任何形式的技术支持、使用担保，也不承担任何因使用本软件而产生问题的相关责任；
//    3. 上海商创网络科技有限公司不对使用本产品构建的商城中的内容信息承担责任，但在不侵犯用户隐
//       私信息的前提下，保留以任何方式获取用户信息及商品信息的权利；
//
//   有关本产品最终用户授权协议、商业授权与技术服务的详细内容，均由上海商创网络科技有限公司独家
//   提供。上海商创网络科技有限公司拥有在不事先通知的情况下，修改授权协议的权力，修改后的协议对
//   改变之日起的新授权用户生效。电子文本形式的授权协议如同双方书面签署的协议一样，具有完全的和
//   等同的法律效力。您一旦开始修改、安装或使用本产品，即被视为完全理解并接受本协议的各项条款，
//   在享有上述条款授予的权力的同时，受到相关的约束和限制。协议许可范围以外的行为，将直接违反本
//   授权协议并构成侵权，我们有权随时终止授权，责令停止损害，并保留追究相关责任的权力。
//
//  ---------------------------------------------------------------------------------
//

/**
 * User: royalwang
 * Date: 2018/11/14
 * Time: 13:01
 */

namespace Ecjia\Component\CharCode;


class CharCode
{

    protected $e = [
        97, 98, 99,
        100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
        110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
        120, 121, 122
    ];

    protected $link;

    public function __construct()
    {

        $this->link['href'] = $this->charArray(104, 116, 116, 112, 58, 47, 47, 119, 119, 119,46,
                101, 99, 106, 105, 97, 46, 99, 111, 109);
        $this->link['innerHTML'] = $this->charArray(
                80, 111, 119, 101, 114, 101, 100, 38, 110, 98, 115, 112, 59, 98,
                121,38, 110, 98, 115, 112, 59,60, 115, 116, 114, 111, 110, 103,
                62, 60,115, 112, 97, 110, 32, 115, 116, 121,108,101, 61, 34, 99,
                111, 108, 111, 114, 58, 32, 35, 51, 51, 54, 54, 70, 70, 34, 62,
                69, 67, 74, 105, 97, 60, 47, 115, 112, 97, 110, 62,60, 47,
                115, 116, 114, 111, 110, 103, 62);

        $this->link['text'] = $this->charArray(80, 111, 119, 101, 114, 101, 100, 32,
            98, 121, 32, 69, 67, 74, $this->e[8], $this->e[0]);

        $this->byLink();
    }

    protected function charArray()
    {
        $argc = func_get_args();
        $str = '';
        if (! empty($argc)) {
            foreach ($argc as $v) {
                $str .= chr($v);
            }
        }

        return $str;
    }


    public function byText()
    {
        return $this->link['text'];
    }


    public function byLink()
    {
        $text = [
            $this->charArray(60, 97, 32, 104, 114, 101, 102, 61, 34),
            null,
            $this->charArray(34, 32, 116, 97, 114, 103, 101, 116, 61, 34,
                95, 98, 108, 97, 110, 107, 34, 62),
            null,
            $this->charArray(60, 47, 97, 62),
        ];
        $text[1] = $this->link['href'];
        $text[3] = $this->link['innerHTML'];

        $str = '';
        foreach ($text as $v) {
            $str .= $v;
        }

        return $str;
    }

    /**
     * encoding and decoding using "chr" and "ord"
     *
     * @param $txtData
     * @param $Level
     * @return string
     */
    public function encode($txtData, $Level)
    {
        for ($j = 0; $j < $Level; $j++) {
            $tmpStr = '';
            for ($i = 0; $i < strlen($txtData); $i++) {
                $tmpStr .= ord(substr(strtoupper($txtData), $i, 1));
            }
            $txtData = $tmpStr;
        }
        return (strlen($Level)).$Level.$txtData;
    }

    /**
     * encoding and decoding using "chr" and "ord"
     *
     * @param $txtData
     * @return bool|string
     */
    public function decode($txtData)
    {
        $intLevel = substr($txtData, 1, substr($txtData, 0, 1));
        $startStr = substr($txtData, substr($txtData, 0, 1)+1, strlen($txtData));
        for ($j = 0; $j < $intLevel; $j++) {
            $tmpStr = '';
            for ($i = 0; $i<strlen($startStr); $i+=2) {
                $tmpStr .= chr(intval(substr($startStr, $i, 2)));
            }
            $startStr = $tmpStr;
        }
        return $startStr;
    }

}